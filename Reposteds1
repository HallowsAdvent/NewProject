if _G.Celebrial_nonYieldLoaded ~= true then
	_G.Celebrial_nonYieldLoaded = true
	task.spawn(function()
		local ScriptData = {

			ScriptLevel = 		"1",
			ScriptBuild = 		"Legit",

			ScriptDaysL =		"-inf",
			ScriptCalls =		"Celebrial",	

			ScriptSpprt =		"[Criminality]",
			ScriptSVrsn =		"unknown",
		}


		A, B, C = 'https://raw.githubusercontent.com/HallowsAdvent/NewProject/refs/heads/main/Source2',{},{

			Build_Core1 = ScriptData.ScriptCalls..": "..ScriptData.ScriptSpprt,
			Build_Core2 = "days left: "..tostring(ScriptData.ScriptDaysL),
		}

		Init = function(DataCore)
			_G.DataCore = DataCore
		end

		if type(A) == "string" and string.find(string.lower(A), "githubusercontent") then Init(C) A = loadstring(game:HttpGet(A, true))() end

		B.Plugins = {}
		B.Scripts = {}
		B.Assets =  {}

		B.Plugins.__Commas = function(data) local vdata = data local gdata while game do vdata, gdata = string.gsub(vdata, '^(-?%d+)(%d%d%d)', '%1,%2') if (gdata == 0) then break end end return vdata end


		B.Assets.Windows = {

			--Combat = A:AddWindow('Combat'),
			Visual = A:AddWindow('Visual'),
			Misc =   A:AddWindow('Misc'),	
			WaterM = A:AddWatermark('')
		}

		B.Assets.Sections = {

			Combat = {},
			Visual = {

				Sense = B.Assets.Windows.Visual:AddSection('Palpability')
			},
			Misc = {
				Character = B.Assets.Windows.Misc:AddSection('Character Modifier'),
				Movement = B.Assets.Windows.Misc:AddSection('Movement Modifier'),
			},
		}

		--  //  0  \\  --

		local Sections = B.Assets.Sections
		local ReplicatedStorage = game:GetService("ReplicatedStorage")
		local PlayerService = game:GetService("Players")
		local Player = PlayerService.LocalPlayer

		B.Values =  {

			Walkspeed = {
				SpeedValue = 1,
				SpeedBool = true,
			},

			Acceleration = {
				AccelValue = 1,
				AccelBool = true,
			},

			StaminaMods = {
				StaminaBool = true,
			},

			Wallhacking = {
				EspBool = true,
			},

			Lockpicking = {
				LockpickBool = true,
			},
			
			FastUsage = {
				PromptsBool = true,
			},
		}

		local EspConfig = {
			BillSize = UDim2.new(1000,0,1000,0),
			FrameSize = UDim2.new(0.005,0,0.005,0),
			FramePos = UDim2.new(0.5,0,0.5,0),
			FramePoint = Vector2.new(0.5,0.5),
			FrameColor = Color3.fromRGB(255,255,255),
			Gm = game.Workspace.Terrain,
			Gm1 = "espcnc"
		}

		local new_esp = function(i)
			local V,ProtectedCreation = pcall(function()
				local EspFolder
				if not EspConfig.Gm:FindFirstChild("espcnc") then
					EspFolder = Instance.new("Folder",EspConfig.Gm)
					EspFolder.Name = EspConfig.Gm1
				else
					EspFolder = EspConfig.Gm
				end

				local char = i.Character
				local humpart
				if char:FindFirstChild("HumanoidRootPart") then
					humpart = char:WaitForChild("HumanoidRootPart")
				end

				local I1 = Instance.new("BillboardGui")
				local I2 = Instance.new("Frame")
				local I3 = Instance.new("UIStroke")
				local I4 = Instance.new("TextLabel")


				I1.Enabled = true
				I1.Parent = EspConfig.Gm:WaitForChild(EspConfig.Gm1)
				I1.Adornee = humpart
				I1.LightInfluence = 0
				I1.AlwaysOnTop = true
				I1.Size = EspConfig.BillSize
				I1.ResetOnSpawn = false
				I1.Name = i.Name

				I2.Position = EspConfig.FramePos
				I2.Size = EspConfig.FrameSize
				I2.BackgroundTransparency = 1
				I2.AnchorPoint = EspConfig.FramePoint
				I2.Parent = I1

				I3.Thickness = 2
				I3.Color = EspConfig.FrameColor
				I3.Parent = I2
				I3.LineJoinMode = Enum.LineJoinMode.Miter

				I4.Parent = I1
				I4.Text = i.Name
				I4.BackgroundTransparency = 1
				I4.TextColor3 = EspConfig.FrameColor
				I4.TextStrokeTransparency = 0
				I4.TextSize = 14
				I4.TextWrapped = true
				I4.Font = "MontserratBold"
				I4.Position = UDim2.new(0.5,0,0.503,0)
				I4.Size = UDim2.new(0,500,0,50)
				I4.AnchorPoint = EspConfig.FramePoint
			end)
		end

		B.Scripts.Toggle_InfinityStamina = function(Boolean)
			local NewFolder = ReplicatedStorage["CharStats"]:FindFirstChild(Player.Name) or nil

			if NewFolder then
				if Boolean then
					local meanline = NewFolder.Currents:FindFirstChild("2.39418")

					if not meanline then
						local instance_boolean = Instance.new("BoolValue")
						instance_boolean.Value = true
						instance_boolean.Name = "2.39418"
						instance_boolean.Parent = NewFolder.Currents
					end
				else
					if NewFolder.Currents:FindFirstChild("2.39418") then
						NewFolder.Currents["2.39418"]:Destroy()
					end
				end
			end
		end

		B.Scripts.Change_WalkSpeed = function(Boolean, Number)
			local NewFolder = ReplicatedStorage["CharStats"]:FindFirstChild(Player.Name) or nil
			Number = Number or 0

			if NewFolder then
				if Boolean then
					local meanline

					if NewFolder.Currents:FindFirstChild("SP_ADONIS") then
						meanline = NewFolder.Currents
						meanline.Value = Number
					else
						meanline = Instance.new("NumberValue")
						meanline.Name = "SP_ADONIS"
						meanline.Value = Number
						meanline.Parent = NewFolder.Currents
					end	
				else
					local meanline

					if NewFolder.Currents:FindFirstChild("SP_ADONIS") then
						meanline = NewFolder.Currents.SP_ADONIS
						meanline:Destroy()
					end
				end
			end
		end

		B.Scripts.Change_Acceleration = function(Number)
			local NewFolder = ReplicatedStorage["CharStats"]:FindFirstChild(Player.Name) or nil
			Number = Number or 1

			if NewFolder then
				local meanline = NewFolder:FindFirstChild("AccelerationModifier")
				if meanline then
					meanline.Value = Number
				end
			end
		end

		B.Scripts.Toggle_NeckMovement = function(Boolean)
			if Player.Character then
				Player.Character:SetAttribute("NoNeckMovement", Boolean)
			end
		end

		B.Scripts.Toggle_BodyRotation = function(Boolean)
			local NewFolder = ReplicatedStorage["CharStats"]:FindFirstChild(Player.Name) or nil

			if NewFolder then
				if Boolean then
					local meanline = NewFolder.Currents:FindFirstChild("ROTROOT")

					if not meanline then
						local instance_boolean = Instance.new("BoolValue")
						instance_boolean.Name = "ROTROOT"
						instance_boolean.Parent = NewFolder.Currents
					end
				else
					if NewFolder.Currents:FindFirstChild("ROTROOT") then
						NewFolder.Currents["ROTROOT"]:Destroy()
					end
				end
			end
		end

		B.Scripts.Toggle_ExtraSensoryPerception = function(Boolean)
			if Boolean then
				for _,i in PlayerService:GetChildren() do
					if i.Name ~= Player.Name then
						if i.Character then
							new_esp(i)
						end
					end
				end
			else
				if EspConfig.Gm:FindFirstChild(EspConfig.Gm1) then
					EspConfig.Gm[EspConfig.Gm1]:Destroy()
				end
			end
		end

		B.Scripts.Toggle_LockpickResize = function(Boolean)
			local PlayerGui = Player.PlayerGui

			local Baty = function(gui)
				if gui:FindFirstChild("MF") then
					for _, T in gui.MF.LP_Frame.Frames:GetChildren() do
						if T:IsA("Frame") and T:FindFirstChild("Bar") then
							if Boolean then
								T.Bar.UIScale.Scale = 15
							else
								T.Bar.UIScale.Scale = 1
							end
						end
					end
				end
			end

			if PlayerGui:FindFirstChild("LockpickGUI") then
				Baty(PlayerGui.LockpickGUI)
			end
		end

		task.spawn(function() -- Handling Specific Events / Connections
			local PlayerGui = Player.PlayerGui

			PlayerGui.ChildAdded:Connect(function(AddedChild)
				if AddedChild.Name == "LockpickGUI" then
					if B.Values.Lockpicking.LockpickBool == true then
						B.Scripts.Toggle_LockpickResize(true)
					else
						B.Scripts.Toggle_LockpickResize(false)
					end
				end
			end)
			
			game:GetService("ProximityPromptService").PromptShown:Connect(function(ActualPrompt)
				if B.Values.FastUsage.PromptsBool == true then
					if ActualPrompt:GetAttribute("flag_duration") == nil then
						ActualPrompt:SetAttribute("flag_duration", ActualPrompt.HoldDuration)
					end
					ActualPrompt.HoldDuration = 0
				elseif ActualPrompt:GetAttribute("flag_duration") ~= nil then
					if ActualPrompt:GetAttribute("flag_duration") ~= ActualPrompt.HoldDuration then
						ActualPrompt.HoldDuration = ActualPrompt:GetAttribute("flag_duration")
					end
				end
			end)
			
			coroutine.wrap(function()
				while true do task.wait(7.5)
					if B.Values.Wallhacking.EspBool == true then
						B.Scripts.Toggle_ExtraSensoryPerception(true)
					end
				end
			end)()
			
			Player.CharacterAdded:Connect(function()
				task.wait(.8)
				
				if B.Values.Walkspeed.SpeedBool == true then
					B.Scripts.Change_WalkSpeed(true, B.Values.Walkspeed.SpeedValue)
				end
				if B.Values.Acceleration.AccelBool == true then
					B.Scripts.Change_Acceleration(B.Values.Acceleration.AccelValue)
				end
				if B.Values.StaminaMods.StaminaBool == true then
					B.Scripts.Toggle_InfinityStamina(true)
				end
				
			end)
		end)


		--  //  1  \\  --


		--  //    Misc    \\  --
		--  || ========== ||  --
		--  \\  Movement  //  --


		--  \\  Speed  //  --
		Sections.Misc.Movement:AddLabel('Speed-Hacking')

		Sections.Misc.Movement:AddToggle('Toggle Speed', B.Values.Walkspeed.SpeedBool, Enum.KeyCode.Z, function(Boolean)
			B.Values.Walkspeed.SpeedBool = Boolean
			B.Scripts.Change_WalkSpeed(B.Values.Walkspeed.SpeedBool, B.Values.Walkspeed.SpeedValue)
		end)

		Sections.Misc.Movement:AddSlider('Change Speed', 10, 0, 1, function(Number)
			B.Values.Walkspeed.SpeedValue = Number
			if B.Values.Walkspeed.SpeedBool == false then
				B.Scripts.Change_WalkSpeed(B.Values.Walkspeed.SpeedBool, B.Values.Walkspeed.SpeedValue)
			end
		end)

		--  \\  Acceleration  //  --
		Sections.Misc.Movement:AddLabel('Acceleration-Hacking')

		Sections.Misc.Movement:AddSlider('Change Acceleration', 10, 0, 1, function(Number)
			B.Values.Acceleration.AccelValue = Number
			B.Scripts.Change_Acceleration(B.Values.Acceleration.AccelValue)
		end)

		--  \\  Stamina  //  --
		Sections.Misc.Character:AddLabel('Other')	

		Sections.Misc.Character:AddToggle('Toggle Inf-Stamina', B.Values.StaminaMods.StaminaBool, Enum.KeyCode.I, function(Boolean)
			B.Values.StaminaMods.StaminaBool = Boolean
			B.Scripts.Toggle_InfinityStamina(B.Values.StaminaMods.StaminaBool)
		end)
		
		Sections.Misc.Character:AddToggle('Toggle Fast-Prompts', B.Values.FastUsage.PromptsBool, nil, function(Boolean)
			B.Values.FastUsage.PromptsBool = Boolean
		end)

		--  \\  Other  //  --


		Sections.Misc.Character:AddToggle('Disable Neck-Movement', true, nil, function(Boolean)
			B.Scripts.Toggle_NeckMovement(Boolean)
		end)

		Sections.Misc.Character:AddToggle('Enable Root-Following', true, nil, function(Boolean)
			B.Scripts.Toggle_BodyRotation(Boolean)
		end)

		--  \\  Lockpicking  //  --
		Sections.Misc.Character:AddToggle('Easy lockpicks', B.Values.Lockpicking.LockpickBool, nil, function(Boolean)
			B.Values.Lockpicking.LockpickBool = Boolean
			B.Scripts.Toggle_LockpickResize(Boolean)
		end)

		--  \\  Esp  //  --
		Sections.Visual.Sense:AddToggle('Toggle Player-Esp', B.Values.Wallhacking.EspBool, Enum.KeyCode.J, function(Boolean)
			B.Values.Wallhacking.EspBool = Boolean
			B.Scripts.Toggle_ExtraSensoryPerception(Boolean)
		end)

		Sections.Misc.Character:AddLabel('Menu')	

		Sections.Misc.Character:AddKeyBind('Toggle ui', Enum.KeyCode.Insert, function() 
			_G.IsScreenGui_toggler_actor.Enabled = not _G.IsScreenGui_toggler_actor.Enabled
		end)

		task.spawn(function()
			local ms = A.ms or 'hehe wha'

			spawn(function()
				while wait(1) do
					local time = 'TIME: '..os.date("%H:%M:%S", os.time())
					local fps = A.fps
					local t = ''
					t = time..fps

					B.Assets.Windows.WaterM:ChangeText(t)
				end

				B.Assets.Windows.WaterM:Visible(true)
			end)
		end)
	end)
end
